// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calc_titer_loglik
double calc_titer_loglik(double max_titer, double min_titer, double pred_titer, double error_sd);
RcppExport SEXP _AbLandscapes_calc_titer_loglik(SEXP max_titerSEXP, SEXP min_titerSEXP, SEXP pred_titerSEXP, SEXP error_sdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type max_titer(max_titerSEXP);
    Rcpp::traits::input_parameter< double >::type min_titer(min_titerSEXP);
    Rcpp::traits::input_parameter< double >::type pred_titer(pred_titerSEXP);
    Rcpp::traits::input_parameter< double >::type error_sd(error_sdSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_titer_loglik(max_titer, min_titer, pred_titer, error_sd));
    return rcpp_result_gen;
END_RCPP
}
// calc_titer_set_negll
double calc_titer_set_negll(NumericVector max_titers, NumericVector min_titers, NumericVector pred_titers, NumericVector titer_weights, double hi_error_sd);
RcppExport SEXP _AbLandscapes_calc_titer_set_negll(SEXP max_titersSEXP, SEXP min_titersSEXP, SEXP pred_titersSEXP, SEXP titer_weightsSEXP, SEXP hi_error_sdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type max_titers(max_titersSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type min_titers(min_titersSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pred_titers(pred_titersSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type titer_weights(titer_weightsSEXP);
    Rcpp::traits::input_parameter< double >::type hi_error_sd(hi_error_sdSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_titer_set_negll(max_titers, min_titers, pred_titers, titer_weights, hi_error_sd));
    return rcpp_result_gen;
END_RCPP
}
// calc_mean_titer_negll
double calc_mean_titer_negll(NumericVector max_titers, NumericVector min_titers, double predicted_mean, double titer_sd);
RcppExport SEXP _AbLandscapes_calc_mean_titer_negll(SEXP max_titersSEXP, SEXP min_titersSEXP, SEXP predicted_meanSEXP, SEXP titer_sdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type max_titers(max_titersSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type min_titers(min_titersSEXP);
    Rcpp::traits::input_parameter< double >::type predicted_mean(predicted_meanSEXP);
    Rcpp::traits::input_parameter< double >::type titer_sd(titer_sdSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_mean_titer_negll(max_titers, min_titers, predicted_mean, titer_sd));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_AbLandscapes_calc_titer_loglik", (DL_FUNC) &_AbLandscapes_calc_titer_loglik, 4},
    {"_AbLandscapes_calc_titer_set_negll", (DL_FUNC) &_AbLandscapes_calc_titer_set_negll, 5},
    {"_AbLandscapes_calc_mean_titer_negll", (DL_FUNC) &_AbLandscapes_calc_mean_titer_negll, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_AbLandscapes(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
